// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
  TAHFIZH_HEAD
  KATIB
  PARENT
}

enum Gender {
  M
  F
}

enum SessionType {
  Murojaah
  Setoran
}

enum EventType {
  CREATE
  UPDATE
  DELETE
}

enum EventModelType {
  USER
  TEACHER
  TAHFIZH_GROUP
  STUDENT
  PARENT
  SESSION
  PERCEPATAN
  ALQURAN
}

model User {
  id             Int      @id @default(autoincrement())
  username       String   @unique
  password       String
  role           Role
  relatedTeacher Teacher?
  relatedStudent Student?
  relatedParent  Parent?
  auditLogs      Event[]
}

model Teacher {
  id            Int            @id @default(autoincrement())
  nig     String         @unique
  name          String
  email         String         @unique
  gender        Gender
  birthPlace    String
  birthDate     DateTime
  Sessions      Session[]
  tahfizhGroups TahfizhGroup[]
  user          User           @relation(fields: [userId], references: [id])
  userId        Int
}

model TahfizhGroup {
  id        Int       @id @default(autoincrement())
  teacher   Teacher   @relation(fields: [teacherId], references: [id])
  teacherId Int
  students  Student[]
}

model Student {
  id             Int          @id @default(autoincrement())
  nit            String       @unique
  name           String
  gender         Gender
  birthPlace     String
  birthDate      DateTime
  tahunMasuk     Int
  tahunLulus     Int
  sessions       Session[]
  tahfizhGroup   TahfizhGroup @relation(fields: [tahfizhGroupId], references: [id])
  tahfizhGroupId Int
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  studentParents StudentParent[]
}

model Parent {
  id             Int      @id @default(autoincrement())
  name        String
  birthPlace  String
  birthDate   DateTime
  occupation   String
  martialStatus      String
  income Int
  profileURL  String
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  studentParents StudentParent[]
}


// Student <-> Parent many to many
model StudentParent {
  student Student @relation(fields: [studentId], references: [id])
  studentId Int 
  parent Parent @relation(fields: [parentId], references: [id])
  parentId Int
  @@id([studentId, parentId])
}

model Session {
  id           Int         @id @default(autoincrement())
  waktuMulai   DateTime
  waktuSelesai DateTime
  juz          Int
  halaman      Int
  awalSetoran  String
  akhirSetoran String
  tajwid       Int
  kelancaran   Int
  makhrojSifat Int
  teacher      Teacher     @relation(fields: [teacherId], references: [id])
  teacherId    Int
  student      Student     @relation(fields: [studentId], references: [id])
  studentId    Int
  type         SessionType
  percepatan   Percepatan?
}

model Percepatan {
  id        Int      @id @default(autoincrement())
  tanggal   DateTime
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId Int
}

model Alquran {
  id           Int    @id @default(autoincrement())
  juz          Int
  halaman      Int
  surah        String
  awalAyatHal  String
  akhirAyatHal String
}

model Event {
  id       Int            @id @default(autoincrement())
  type     EventType
  target   EventModelType
  targetId Int
  actor    User           @relation(fields: [userId], references: [id])
  userId   Int
  time     DateTime       @default(now())
}