name: LTMS Staging Deploy

on:
  push:
    branches: [ master ]

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout master branch
      uses: actions/checkout@v2
    - name: Write .env file
      run: |
        echo -e 'POSTGRES_USER=${{ secrets.STAGING_POSTGRES_USER }}' > .env
        echo -e 'POSTGRES_PASSWORD=${{ secrets.STAGING_POSTGRES_PASSWORD }}' >> .env
        echo -e 'POSTGRES_DB=${{ secrets.STAGING_POSTGRES_DB }}' >> .env
        echo -e 'DB_PORT=${{ secrets.STAGING_POSTGRES_PORT }}' >> .env
        echo -e 'DB_SCHEMA=${{ secrets.STAGING_DB_SCHEMA }}' >> .env
        echo -e 'DATABASE_URL=${{ secrets.STAGING_DATABASE_URL }}' >> .env
        echo -e 'PORT=${{ secrets.STAGING_PORT }}' >> .env
        echo -e 'JWT_SECRET=${{ secrets.STAGING_JWT_SECRET }}' >> .env
    - name: Install Rsync
      run: sudo apt update && sudo apt install rsync
    - name: Create rsync exclude.txt
      run: |
        echo -e 'data' >> exclude-list.txt
        echo -e '.git' >> exclude-list.txt
        echo -e '.env.example' >> exclude-list.txt
        echo -e '.gitattributes' >> exclude-list.txt
        echo -e '.gitignore' >> exclude-list.txt
        echo -e '.idea' >> exclude-list.txt
        echo -e '.env.example' >> exclude-list.txt
        echo -e '.eslintrc' >> exclude-list.txt
        echo -e '.eslintignore' >> exclude-list.txt
        echo -e 'exclude-list.txt' >> exclude-list.txt
    - name: Adding Host key to known_hosts file
      run: mkdir -p ~/.ssh && ssh-keyscan -H ${{ secrets.STAGING_SERVER_HOSTNAME }} >> ~/.ssh/known_hosts
    - name: Deploy to staging Server via Rsync
      uses: AEnterprise/rsync-deploy@v1.0
      env:
        DEPLOY_KEY: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
        ARGS: "-azvW --delete --exclude-from exclude-list.txt"
        SERVER_PORT: ${{ secrets.STAGING_SSH_PORT }}
        FOLDER: "./"
        SERVER_IP: ${{ secrets.STAGING_SERVER_HOSTNAME }}
        USERNAME: ${{ secrets.STAGING_SSH_USERNAME }}
        SERVER_DESTINATION: ${{ secrets.STAGING_DEPLOY_PATH }}
    - name: Run Script over SSH
      uses: appleboy/ssh-action@master
      env:
        DEPLOY_PATH: ${{ secrets.STAGING_DEPLOY_PATH }}
      with:
        host: ${{ secrets.STAGING_SERVER_HOSTNAME }}
        username: ${{ secrets.STAGING_SSH_USERNAME }}
        key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
        envs: DEPLOY_PATH
        script: cd $DEPLOY_PATH && docker-compose up --build -d && docker image prune
